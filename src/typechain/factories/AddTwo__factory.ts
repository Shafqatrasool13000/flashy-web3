/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddTwo, AddTwoInterface } from "../AddTwo";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063771602f714610030575b600080fd5b61004361003e3660046100fc565b610057565b604051901515815260200160405180910390f35b60006100896040518060400160405280600381526020016218591960ea1b81525083856100849190610178565b610092565b50600192915050565b6100d782826040516024016100a892919061011d565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526100db565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000806040838503121561010e578182fd5b50508035926020909101359150565b6040815260008351806040840152815b8181101561014a576020818701810151606086840101520161012d565b8181111561015b5782606083860101525b50602083019390935250601f91909101601f191601606001919050565b6000821982111561019757634e487b7160e01b81526011600452602481fd5b50019056fea26469706673582212206530301d7e44700f88df515e7ed6dcfe1b2a9f6a3c58792f0efff88a0540603f64736f6c63430008040033";

export class AddTwo__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddTwo> {
    return super.deploy(overrides || {}) as Promise<AddTwo>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AddTwo {
    return super.attach(address) as AddTwo;
  }
  connect(signer: Signer): AddTwo__factory {
    return super.connect(signer) as AddTwo__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddTwoInterface {
    return new utils.Interface(_abi) as AddTwoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AddTwo {
    return new Contract(address, _abi, signerOrProvider) as AddTwo;
  }
}
