/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faucet, FaucetInterface } from "../Faucet";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "drain",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "drainToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610277806100206000396000f3fe60806040526004361061002a5760003560e01c80639890220b146100335780639d4323be1461003b57005b3661003157005b005b61003161005b565b34801561004757600080fd5b506100316100563660046101b9565b61009c565b6000610068346002610216565b604051909150339082156108fc029083906000818181858888f19350505050158015610098573d6000803e3d6000fd5b5050565b60006100a9826002610216565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038416906323b872dd90606401602060405180830381600087803b1580156100fa57600080fd5b505af115801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013291906101ef565b5060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0384169063a9059cbb90604401602060405180830381600087803b15801561017b57600080fd5b505af115801561018f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b391906101ef565b50505050565b600080604083850312156101cb578182fd5b82356001600160a01b03811681146101e1578283fd5b946020939093013593505050565b600060208284031215610200578081fd5b8151801515811461020f578182fd5b9392505050565b600081600019048311821515161561023c57634e487b7160e01b81526011600452602481fd5b50029056fea264697066735822122048b370f30f8669aca195127b7753af3bbe0b61c971669f30563758be3f5d7b8564736f6c63430008040033";

export class Faucet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
