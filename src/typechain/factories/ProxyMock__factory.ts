/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProxyMock, ProxyMockInterface } from "../ProxyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeRuleRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "ChargeFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "gas",
        type: "int256",
      },
    ],
    name: "DeltaGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "GetGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "handler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "LogBegin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "handler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "LogEnd",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PolygonBridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "RecordHandlerResult",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MSG_SENDER_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSTPROCESS_SIG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "configs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "ruleIndexes",
        type: "uint256[]",
      },
    ],
    name: "batchExec",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cache",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execMock",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "configs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "execs",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRuleRegistry",
    outputs: [
      {
        internalType: "contract IFeeRuleRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Config.HandlerType",
        name: "handlerType",
        type: "uint8",
      },
    ],
    name: "setHandlerType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        internalType: "bytes32[]",
        name: "params",
        type: "bytes32[]",
      },
    ],
    name: "setPostProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateTokenMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002c8a38038062002c8a8339810160408190526200003491620000a7565b6001600160601b0319606083811b821660805282901b1660a0526200005862000060565b5050620000de565b7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c61138d5a039055565b80516001600160a01b0381168114620000a257600080fd5b919050565b60008060408385031215620000ba578182fd5b620000c5836200008a565b9150620000d5602084016200008a565b90509250929050565b60805160601c60a05160601c612b3b6200014f6000396000818161044a015261116001526000818160cf01528181610199015281816102f3015281816104a901528181610660015281816108ab0152818161096c01528181610b5801528181610c190152610f7c0152612b3b6000f3fe6080604052600436106100c65760003560e01c806387c139431161007f578063be19275b11610059578063be19275b14610534578063dc9031c414610554578063f835f30914610574578063fa2901a5146105ce576100cd565b806387c13943146104cb57806399eb59b9146104e7578063b5af492a14610514576100cd565b80630f532d18146103ce57806341f188e11461040357806357da6a9114610418578063678987bb1461043857806371938509146104845780637b10399914610497576100cd565b366100cd57005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561012657600080fd5b505afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e91906126e1565b156101845760405162461bcd60e51b815260040161017b906128f2565b60405180910390fd5b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b1580156101e357600080fd5b505afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b9190612719565b156102385760405162461bcd60e51b815260040161017b906128d2565b6000610242610602565b6001600160a01b031614156102955760405162461bcd60e51b815260206004820152601960248201527814d95b99195c881a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b604482015260640161017b565b61029e3361063e565b6102db5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b604482015260640161017b565b604051637bbf4a3f60e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637bbf4a3f9060240160206040518083038186803b15801561033d57600080fd5b505afa158015610351573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103759190612719565b60601c905060006103c1826000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060001992506106e3915050565b8051909150602082018181f35b3480156103da57600080fd5b506103f0600080516020612ae683398151915281565b6040519081526020015b60405180910390f35b610416610411366004612628565b6108a9565b005b61042b61042636600461254e565b610ac7565b6040516103fa9190612873565b34801561044457600080fd5b5061046c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016103fa565b610416610492366004612599565b610b56565b3480156104a357600080fd5b5061046c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d757600080fd5b506103f0670de0b6b3a764000081565b3480156104f357600080fd5b506103f0610502366004612701565b60016020526000908152604090205481565b34801561052057600080fd5b5061041661052f36600461248b565b610dda565b34801561054057600080fd5b5061041661054f366004612731565b610e9f565b34801561056057600080fd5b506103f061056f366004612701565b610ead565b34801561058057600080fd5b5061041661058f36600461246a565b600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015550565b3480156105da57600080fd5b506105e9636139148b60e11b81565b6040516001600160e01b031990911681526020016103fa565b600080516020612ae683398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b60405163bb1010e960e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063bb1010e9906024015b60206040518083038186803b1580156106a557600080fd5b505afa1580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd91906126e1565b92915050565b606061071060405180604001604052806009815260200168546f4164647265737360b81b81525085610ece565b61071983610f17565b61072284610f5a565b6107605760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b2103430b7323632b960891b604482015260640161017b565b6000806000855160208701886113885a03f490503d6040519250601f19601f6020830101168301604052808352806000602085013e5061079f81610fad565b6107c8604051806040016040528060068152602001650d8cadccee8d60d31b8152508351610fee565b6107d182610f17565b806108a1576044825110156108105760405162461bcd60e51b81526020600482015260056024820152645f6578656360d81b604482015260640161017b565b60048201915060001983141561084d57818060200190518101906108349190612750565b60405162461bcd60e51b815260040161017b9190612873565b61085683611033565b8280602001905181019061086a9190612750565b60405160200161087b9291906127ee565b60408051601f198184030181529082905262461bcd60e51b825261017b91600401612873565b509392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a91906126e1565b156109575760405162461bcd60e51b815260040161017b906128f2565b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b1580156109b657600080fd5b505afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190612719565b15610a0b5760405162461bcd60e51b815260040161017b906128d2565b610a4782828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061115492505050565b610ab687878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250611210915050565b610abe6114f4565b50505050505050565b604080516000815260208101909152606090610ae281611154565b610aea6117d6565b610af6848460006106e3565b9150610b0184611800565b610b106247617360e81b611894565b610b186114f4565b7f90c726ff5efa7268723ee48df835144384bc0f012e89750782886764b5e54f1682604051610b479190612873565b60405180910390a15092915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b158015610baf57600080fd5b505afa158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be791906126e1565b15610c045760405162461bcd60e51b815260040161017b906128f2565b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b158015610c6357600080fd5b505afa158015610c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9b9190612719565b15610cb85760405162461bcd60e51b815260040161017b906128d2565b6000610cc2610602565b6001600160a01b03161415610d155760405162461bcd60e51b815260206004820152601960248201527814d95b99195c881a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b604482015260640161017b565b333014610d645760405162461bcd60e51b815260206004820152601d60248201527f446f6573206e6f7420616c6c6f772065787465726e616c2063616c6c73000000604482015260640161017b565b610dd385858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250869250611210915050565b5050505050565b80515b8015610e3a57610e2882610df2600184612a16565b81518110610e1057634e487b7160e01b600052603260045260246000fd5b6020026020010151600061190790919063ffffffff16565b80610e3281612a5d565b915050610ddd565b5060008054600180820183558280526001600160e01b031985167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392830155825480820184556001600160a01b038716920191909155610e9a9190611941565b505050565b610eaa600082611941565b50565b60008181548110610ebd57600080fd5b600091825260209091200154905081565b610f138282604051602401610ee4929190612886565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261198b565b5050565b610eaa81604051602401610f2b9190612873565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b17905261198b565b604051631a98d06960e31b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4c683489060240161068d565b6040518115156024820152610eaa9060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b17905261198b565b610f1382826040516024016110049291906128b0565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261198b565b6060816110575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611081578061106b81612a74565b915061107a9050600a836129a4565b915061105b565b6000816001600160401b038111156110a957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110d3576020820181803683370190505b5090505b841561114c576110e8600183612a16565b91506110f5600a86612a8f565b61110090603061298c565b60f81b81838151811061112357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611145600a866129a4565b94506110d7565b949350505050565b61115c6119ac565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637c4e1d1b611195610602565b846040518363ffffffff1660e01b81526004016111b392919061282a565b60206040518083038186803b1580156111cb57600080fd5b505afa1580156111df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112039190612719565b9050610f13600182611a40565b61121861230d565b60008083518651146112765760405162461bcd60e51b815260206004820152602160248201527f546f7320616e64206461746173206c656e67746820696e636f6e73697374656e6044820152601d60fa1b606482015260840161017b565b84518651146112d35760405162461bcd60e51b815260206004820152602360248201527f546f7320616e6420636f6e66696773206c656e67746820696e636f6e73697374604482015262195b9d60ea1b606482015260840161017b565b60005b8651811015610abe57600087828151811061130157634e487b7160e01b600052603260045260246000fd5b60200260200101519050600087838151811061132d57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600087848151811061135957634e487b7160e01b600052603260045260246000fd5b6020026020010151905061136c82611abe565b61137c5761137c81838989611ae0565b600061138782611c3b565b9050806001600160e01b031916846001600160a01b03167f1e4e60ae3aeb9909ff5e6502e86867f181eadfa0c215186eaf47665909d71eb1846040516113cd9190612873565b60405180910390a360006113e28584896106e3565b9050866113ee81612a74565b975050816001600160e01b031916856001600160a01b03167fc4c643b243548ed55ba2a304003e28a0a82c202984eb15e1d80d811e02dec47f836040516114359190612873565b60405180910390a361144684611d24565b156114d35760ff60f085901c1660006114608b848c611d42565b905061146c828b61298c565b81146114cf5760405162461bcd60e51b815260206004820152602c60248201527f52657475726e206e756d20616e64207061727365642072657475726e206e756d60448201526b081b9bdd081b585d18da195960a21b606482015260840161017b565b9850505b6114dc85611800565b505050505080806114ec90612a74565b9150506112d6565b6000541561171b5760006115086000611e26565b9050600060a082901c600281111561153057634e487b7160e01b600052602160045260246000fd5b9050600081600281111561155457634e487b7160e01b600052602160045260246000fd5b1415611667576040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a082319060240160206040518083038186803b15801561159e57600080fd5b505afa1580156115b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d69190612719565b905080156116605760405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561162657600080fd5b505af115801561163a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165e91906126e1565b505b5050611714565b600181600281111561168957634e487b7160e01b600052602160045260246000fd5b14156116d557600061169b6000611e6c565b6040805160048152602481019091526020810180516001600160e01b0316636139148b60e11b1790529091506116609082906000196106e3565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642068616e646c6572207479706560601b604482015260640161017b565b50506114f4565b47801561175157604051339082156108fc029083906000818181858888f1935050505015801561174f573d6000803e3d6000fd5b505b600160205260007fe3c27e9998c410cbc1bc99c043b2159f2223d768316452dd163c810fbf33d3938190557fb23c0bd6127fbb5e90a415ffb571bd6e4dfe0f2731ea5882703d050f6a0a0c99819055600080516020612ae683398151915281527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95550565b7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c61138d5a039055565b60005461180a5750565b600160a01b6118196000611e9a565b14801561183a575061182d60006001611f17565b6001600160e01b03191615155b15610eaa57600080548061185e57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905561188881600061191f90919063ffffffff16565b610eaa60006001611941565b7faf6ae684695362675b87dad33f48929dfb2daf9ddeda7c0bc0297cb70d1aeae7815a7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c5460ca19016118e791906129d7565b6040805192835260208301919091520160405180910390a1610eaa6117d6565b81546001810183556000928352602090922090910155565b8154600181018355600092835260209092206001600160a01b03909116910155565b8181600281111561196257634e487b7160e01b600052602160045260246000fd5b81546001810183556000928352602090922060a09190911b6001600160a01b0319169101555050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006119b6610602565b6001600160a01b031614611a045760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881a5cc81a5b9a5d1a585b1a5e9959605a1b604482015260640161017b565b600080516020612ae68339815191526000526001602052337fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c955565b611a4982611fef565b15611a8a5760405162461bcd60e51b81526020600482015260116024820152704665652072617465206e6f74207a65726f60781b604482015260640161017b565b7f142183525227cae0e4300fd0fc77d7f3b08ceb0fd9cb2a6c5488668fa0ea5ffa6000908152602092909252604090912055565b6000600160f81b8216611ad357506001919050565b506000919050565b919050565b600080611aec85612024565b9150915060005b8251811015610abe5783838281518110611b1d57634e487b7160e01b600052603260045260246000fd5b602002602001015110611b725760405162461bcd60e51b815260206004820152601e60248201527f5265666572656e636520746f206f7574206f66206c6f63616c537461636b0000604482015260640161017b565b600085848381518110611b9557634e487b7160e01b600052603260045260246000fd5b60200260200101516101008110611bbc57634e487b7160e01b600052603260045260246000fd5b602002015190506000838381518110611be557634e487b7160e01b600052603260045260246000fd5b602002602001015190506000670de0b6b3a764000090508160208b010180518015611c21578481028582820414611c1b57600080fd5b83900494505b509290925250819050611c3381612a74565b915050611af3565b6000601882600381518110611c6057634e487b7160e01b600052603260045260246000fd5b016020015183516001600160f81b031990911690911c9060109084906002908110611c9b57634e487b7160e01b600052603260045260246000fd5b016020015184516001600160f81b031990911690911c9060089085906001908110611cd657634e487b7160e01b600052603260045260246000fd5b016020015185516001600160f81b031990911690911c908590600090611d0c57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191617171792915050565b600060f082901c60ff16611d3a57506000919050565b506001919050565b8151600090611d52602082612a8f565b15611d9f5760405162461bcd60e51b815260206004820152601960248201527f696c6c6567616c206c656e67746820666f72205f706172736500000000000000604482015260640161017b565b611daa6020826129a4565b611db4908461298c565b9150610100821115611df95760405162461bcd60e51b815260206004820152600e60248201526d737461636b206f766572666c6f7760901b604482015260640161017b565b8260051b60005b82811015611e1c57602081870181015183830189015201611e00565b5050509392505050565b6000611e3182611e9a565b905081805480611e5157634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055919050565b6000611e7782611e9a565b60001c905081805480611e5157634e487b7160e01b600052603160045260246000fd5b805460009080611eda5760405162461bcd60e51b815260206004820152600b60248201526a737461636b20656d70747960a81b604482015260640161017b565b82611ee6600183612a16565b81548110611f0457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154915050919050565b815460009080611f575760405162461bcd60e51b815260206004820152600b60248201526a737461636b20656d70747960a81b604482015260640161017b565b828111611fa65760405162461bcd60e51b815260206004820152601c60248201527f6e6f7420656e6f75676820656c656d656e747320696e20737461636b00000000604482015260640161017b565b836001611fb38584612a16565b611fbd9190612a16565b81548110611fdb57634e487b7160e01b600052603260045260246000fd5b906000526020600020015491505092915050565b7f142183525227cae0e4300fd0fc77d7f3b08ceb0fd9cb2a6c5488668fa0ea5ffa6000908152602082905260408120546106dd565b60608061203083611abe565b1561206d5760405162461bcd60e51b815260206004820152600d60248201526c53746174696320706172616d7360981b604482015260640161017b565b60165b60ff8481161480156120825750600081115b156120a0578061209181612a5d565b915050600884901c9350612070565b600081116120e35760405162461bcd60e51b815260206004820152601060248201526f4e6f2064796e616d696320706172616d60801b604482015260640161017b565b806001600160401b0381111561210957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612132578160200160208202803683370190505b509250806001600160401b0381111561215b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612184578160200160208202803683370190505b50915060005b818110156121dd57835160ff8616908590839081106121b957634e487b7160e01b600052603260045260246000fd5b602090810291909101015260089490941c93806121d581612a74565b91505061218a565b506000805b60408110156122ab576001861615612292578282106122435760405162461bcd60e51b815260206004820181905260248201527f4c6f636174696f6e20636f756e7420657863656564732072656620636f756e74604482015260640161017b565b61224e8160206129b8565b61225990600461298c565b84838151811061227957634e487b7160e01b600052603260045260246000fd5b60209081029190910101528161228e81612a74565b9250505b60019590951c94806122a381612a74565b9150506121e2565b508181146123065760405162461bcd60e51b815260206004820152602260248201527f4c6f636174696f6e20636f756e74206c657373207468616e2072656620636f756044820152611b9d60f21b606482015260840161017b565b5050915091565b604051806120000160405280610100906020820280368337509192915050565b80356001600160a01b0381168114611adb57600080fd5b60008083601f840112612355578182fd5b5081356001600160401b0381111561236b578182fd5b6020830191508360208260051b850101111561238657600080fd5b9250929050565b600082601f83011261239d578081fd5b813560206123b26123ad83612942565b612912565b80838252828201915082860187848660051b89010111156123d1578586fd5b855b858110156124115781356001600160401b038111156123f0578788fd5b6123fe8a87838c010161241e565b85525092840192908401906001016123d3565b5090979650505050505050565b600082601f83011261242e578081fd5b813561243c6123ad82612965565b818152846020838601011115612450578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561247b578081fd5b6124848261232d565b9392505050565b60008060006060848603121561249f578182fd5b6124a88461232d565b92506020848101356001600160e01b0319811681146124c5578384fd5b925060408501356001600160401b038111156124df578283fd5b8501601f810187136124ef578283fd5b80356124fd6123ad82612942565b8082825284820191508484018a868560051b870101111561251c578687fd5b8694505b8385101561253e578035835260019490940193918501918501612520565b5080955050505050509250925092565b60008060408385031215612560578182fd5b6125698361232d565b915060208301356001600160401b03811115612583578182fd5b61258f8582860161241e565b9150509250929050565b6000806000806000606086880312156125b0578081fd5b85356001600160401b03808211156125c6578283fd5b6125d289838a01612344565b909750955060208801359150808211156125ea578283fd5b6125f689838a01612344565b9095509350604088013591508082111561260e578283fd5b5061261b8882890161238d565b9150509295509295909350565b60008060008060008060006080888a031215612642578182fd5b87356001600160401b0380821115612658578384fd5b6126648b838c01612344565b909950975060208a013591508082111561267c578384fd5b6126888b838c01612344565b909750955060408a01359150808211156126a0578384fd5b6126ac8b838c0161238d565b945060608a01359150808211156126c1578384fd5b506126ce8a828b01612344565b989b979a50959850939692959293505050565b6000602082840312156126f2578081fd5b81518015158114612484578182fd5b600060208284031215612712578081fd5b5035919050565b60006020828403121561272a578081fd5b5051919050565b600060208284031215612742578081fd5b813560038110612484578182fd5b600060208284031215612761578081fd5b81516001600160401b03811115612776578182fd5b8201601f81018413612786578182fd5b80516127946123ad82612965565b8181528560208385010111156127a8578384fd5b6127b9826020830160208601612a2d565b95945050505050565b600081518084526127da816020860160208601612a2d565b601f01601f19169290920160200192915050565b60008351612800818460208801612a2d565b605f60f81b908301908152835161281e816001840160208801612a2d565b01600101949350505050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561241157845183529383019391830191600101612857565b60208152600061248460208301846127c2565b60408152600061289960408301856127c2565b905060018060a01b03831660208301529392505050565b6040815260006128c360408301856127c2565b90508260208301529392505050565b60208082526006908201526510985b9b995960d21b604082015260600190565b60208082526006908201526512185b1d195960d21b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561293a5761293a612acf565b604052919050565b60006001600160401b0382111561295b5761295b612acf565b5060051b60200190565b60006001600160401b0382111561297e5761297e612acf565b50601f01601f191660200190565b6000821982111561299f5761299f612aa3565b500190565b6000826129b3576129b3612ab9565b500490565b60008160001904831182151516156129d2576129d2612aa3565b500290565b60008083128015600160ff1b8501841216156129f5576129f5612aa3565b6001600160ff1b0384018313811615612a1057612a10612aa3565b50500390565b600082821015612a2857612a28612aa3565b500390565b60005b83811015612a48578181015183820152602001612a30565b83811115612a57576000848401525b50505050565b600081612a6c57612a6c612aa3565b506000190190565b6000600019821415612a8857612a88612aa3565b5060010190565b600082612a9e57612a9e612ab9565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfeb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453aa2646970667358221220bf5734ddf02211c45f846f5f2143136557e59ae567d28a8ba716368129a7f71f64736f6c63430008040033";

export class ProxyMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    registry: string,
    feeRuleRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyMock> {
    return super.deploy(
      registry,
      feeRuleRegistry,
      overrides || {}
    ) as Promise<ProxyMock>;
  }
  getDeployTransaction(
    registry: string,
    feeRuleRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      registry,
      feeRuleRegistry,
      overrides || {}
    );
  }
  attach(address: string): ProxyMock {
    return super.attach(address) as ProxyMock;
  }
  connect(signer: Signer): ProxyMock__factory {
    return super.connect(signer) as ProxyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyMockInterface {
    return new utils.Interface(_abi) as ProxyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyMock {
    return new Contract(address, _abi, signerOrProvider) as ProxyMock;
  }
}
