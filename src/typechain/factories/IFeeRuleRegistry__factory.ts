/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IFeeRuleRegistry,
  IFeeRuleRegistryInterface,
} from "../IFeeRuleRegistry";

const _abi = [
  {
    inputs: [],
    name: "BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "basisFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ruleIndex",
        type: "uint256",
      },
    ],
    name: "calFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ruleIndexes",
        type: "uint256[]",
      },
    ],
    name: "calFeeRateMulti",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ruleIndexes",
        type: "uint256[]",
      },
    ],
    name: "calFeeRateMultiWithoutBasis",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ruleIndex",
        type: "uint256",
      },
    ],
    name: "calFeeRateWithoutBasis",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rule",
        type: "address",
      },
    ],
    name: "registerRule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "setBasisFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ruleIndex",
        type: "uint256",
      },
    ],
    name: "unregisterRule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFeeRuleRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeRuleRegistryInterface {
    return new utils.Interface(_abi) as IFeeRuleRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFeeRuleRegistry {
    return new Contract(address, _abi, signerOrProvider) as IFeeRuleRegistry;
  }
}
