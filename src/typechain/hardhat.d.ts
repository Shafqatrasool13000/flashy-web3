/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Config",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Config__factory>;
    getContractFactory(
      name: "Faucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Faucet__factory>;
    getContractFactory(
      name: "FeeRuleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeRuleRegistry__factory>;
    getContractFactory(
      name: "FlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanReceiver__factory>;
    getContractFactory(
      name: "GasProfiler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GasProfiler__factory>;
    getContractFactory(
      name: "FlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanReceiver__factory>;
    getContractFactory(
      name: "GasProfiler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GasProfiler__factory>;
    getContractFactory(
      name: "HAaveProtocolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HAaveProtocolV2__factory>;
    getContractFactory(
      name: "HandlerBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HandlerBase__factory>;
    getContractFactory(
      name: "HMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HMock__factory>;
    getContractFactory(
      name: "IFaucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFaucet__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Usdt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Usdt__factory>;
    getContractFactory(
      name: "IFeeRuleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeRuleRegistry__factory>;
    getContractFactory(
      name: "IFlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanReceiver__factory>;
    getContractFactory(
      name: "IHandlerEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHandlerEvents__factory>;
    getContractFactory(
      name: "ILendingPoolAddressesProviderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolAddressesProviderV2__factory>;
    getContractFactory(
      name: "ILendingPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolV2__factory>;
    getContractFactory(
      name: "IPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPool__factory>;
    getContractFactory(
      name: "IPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolAddressesProvider__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "IRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegistry__factory>;
    getContractFactory(
      name: "IRule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRule__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "LibFeeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibFeeStorage__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyMock__factory>;
    getContractFactory(
      name: "ProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyMock__factory>;
    getContractFactory(
      name: "Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Registry__factory>;
    getContractFactory(
      name: "FeeRuleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeRuleRegistry__factory>;
    getContractFactory(
      name: "Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Registry__factory>;
    getContractFactory(
      name: "Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Storage__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Config",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Config>;
    getContractAt(
      name: "Faucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Faucet>;
    getContractAt(
      name: "FeeRuleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeRuleRegistry>;
    getContractAt(
      name: "FlashLoanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanReceiver>;
    getContractAt(
      name: "GasProfiler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GasProfiler>;
    getContractAt(
      name: "FlashLoanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanReceiver>;
    getContractAt(
      name: "GasProfiler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GasProfiler>;
    getContractAt(
      name: "HAaveProtocolV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HAaveProtocolV2>;
    getContractAt(
      name: "HandlerBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HandlerBase>;
    getContractAt(
      name: "HMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HMock>;
    getContractAt(
      name: "IFaucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFaucet>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Usdt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Usdt>;
    getContractAt(
      name: "IFeeRuleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeRuleRegistry>;
    getContractAt(
      name: "IFlashLoanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanReceiver>;
    getContractAt(
      name: "IHandlerEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHandlerEvents>;
    getContractAt(
      name: "ILendingPoolAddressesProviderV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPoolAddressesProviderV2>;
    getContractAt(
      name: "ILendingPoolV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPoolV2>;
    getContractAt(
      name: "IPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPool>;
    getContractAt(
      name: "IPoolAddressesProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolAddressesProvider>;
    getContractAt(
      name: "IProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "IRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegistry>;
    getContractAt(
      name: "IRule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRule>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IWETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH9>;
    getContractAt(
      name: "LibFeeStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibFeeStorage>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyMock>;
    getContractAt(
      name: "ProxyMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyMock>;
    getContractAt(
      name: "Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Registry>;
    getContractAt(
      name: "FeeRuleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeRuleRegistry>;
    getContractAt(
      name: "Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Registry>;
    getContractAt(
      name: "Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Storage>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
